{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer, shell } from 'electron';\r\n\r\n// Expose protected methods that allow the renderer process to use\r\n// the ipcRenderer without exposing the entire object\r\ncontextBridge.exposeInMainWorld(\r\n  'electronAPI',\r\n  {\r\n    selectFolder: () => ipcRenderer.invoke('select-folder'),\r\n    getStoreData: () => ipcRenderer.invoke('get-store-data'),\r\n    setStoreData: (data: any) => ipcRenderer.invoke('set-store-data', data),\r\n    getFolderTree: (folderPath: string, hiddenList: string[], reverseHiddenMode: boolean, searchWords: string[]) =>\r\n      ipcRenderer.invoke('get-folder-tree', folderPath, hiddenList, reverseHiddenMode, searchWords),\r\n    getFolderContents: (folderPath: string, hiddenList: string[], reverseHiddenMode: boolean, searchWords: string[]) =>\r\n      ipcRenderer.invoke('get-folder-contents', folderPath, hiddenList, reverseHiddenMode, searchWords),\r\n    readFile: (filePath: string) => ipcRenderer.invoke('read-file', filePath),\r\n    getRelativePath: (filePath: string, rootPath: string) =>\r\n      ipcRenderer.invoke('get-relative-path', filePath, rootPath),\r\n    getBasename: (filePath: string) =>\r\n      ipcRenderer.invoke('get-basename', filePath),\r\n    resetToDefaults: () => ipcRenderer.invoke('reset-to-defaults'),\r\n    openExternal: (url: string) => shell.openExternal(url),\r\n    startWatching: (folderPath: string) => ipcRenderer.invoke('start-watching', folderPath),\r\n    stopWatching: () => ipcRenderer.invoke('stop-watching'),\r\n    onFileCreated: (callback: (path: string) => void) => ipcRenderer.on('file-created', (_, path) => callback(path)),\r\n    onFileChanged: (callback: (path: string) => void) => {\r\n      const listener = (_: any, path: string) => callback(path);\r\n      ipcRenderer.on('file-changed', listener);\r\n      return () => ipcRenderer.removeListener('file-changed', listener);\r\n    },\r\n    onFileDeleted: (callback: (path: string) => void) => ipcRenderer.on('file-deleted', (_, path) => callback(path)),\r\n    onDirCreated: (callback: (path: string) => void) => ipcRenderer.on('dir-created', (_, path) => callback(path)),\r\n    onDirDeleted: (callback: (path: string) => void) => ipcRenderer.on('dir-deleted', (_, path) => callback(path)),\r\n    removeFileWatchers: () => {\r\n      ipcRenderer.removeAllListeners('file-created');\r\n      ipcRenderer.removeAllListeners('file-changed');\r\n      ipcRenderer.removeAllListeners('file-deleted');\r\n      ipcRenderer.removeAllListeners('dir-created');\r\n      ipcRenderer.removeAllListeners('dir-deleted');\r\n    },\r\n    getFileContents: (filePath: string) => ipcRenderer.invoke('get-file-contents', filePath),\r\n  }\r\n);\r\n"],"names":["contextBridge","ipcRenderer","shell"],"mappings":";;AAIAA,SAAAA,cAAc;AAAA,EACZ;AAAA,EACA;AAAA,IACE,cAAc,MAAMC,SAAAA,YAAY,OAAO,eAAe;AAAA,IACtD,cAAc,MAAMA,SAAAA,YAAY,OAAO,gBAAgB;AAAA,IACvD,cAAc,CAAC,SAAcA,SAAAA,YAAY,OAAO,kBAAkB,IAAI;AAAA,IACtE,eAAe,CAAC,YAAoB,YAAsB,mBAA4B,gBACpFA,SAAAA,YAAY,OAAO,mBAAmB,YAAY,YAAY,mBAAmB,WAAW;AAAA,IAC9F,mBAAmB,CAAC,YAAoB,YAAsB,mBAA4B,gBACxFA,SAAAA,YAAY,OAAO,uBAAuB,YAAY,YAAY,mBAAmB,WAAW;AAAA,IAClG,UAAU,CAAC,aAAqBA,SAAAA,YAAY,OAAO,aAAa,QAAQ;AAAA,IACxE,iBAAiB,CAAC,UAAkB,aAClCA,SAAAA,YAAY,OAAO,qBAAqB,UAAU,QAAQ;AAAA,IAC5D,aAAa,CAAC,aACZA,SAAAA,YAAY,OAAO,gBAAgB,QAAQ;AAAA,IAC7C,iBAAiB,MAAMA,SAAAA,YAAY,OAAO,mBAAmB;AAAA,IAC7D,cAAc,CAAC,QAAgBC,eAAM,aAAa,GAAG;AAAA,IACrD,eAAe,CAAC,eAAuBD,SAAAA,YAAY,OAAO,kBAAkB,UAAU;AAAA,IACtF,cAAc,MAAMA,SAAAA,YAAY,OAAO,eAAe;AAAA,IACtD,eAAe,CAAC,aAAqCA,SAAY,YAAA,GAAG,gBAAgB,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,IAC/G,eAAe,CAAC,aAAqC;AACnD,YAAM,WAAW,CAAC,GAAQ,SAAiB,SAAS,IAAI;AAC5CA,2BAAA,GAAG,gBAAgB,QAAQ;AACvC,aAAO,MAAMA,SAAA,YAAY,eAAe,gBAAgB,QAAQ;AAAA,IAClE;AAAA,IACA,eAAe,CAAC,aAAqCA,SAAY,YAAA,GAAG,gBAAgB,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,IAC/G,cAAc,CAAC,aAAqCA,SAAY,YAAA,GAAG,eAAe,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,IAC7G,cAAc,CAAC,aAAqCA,SAAY,YAAA,GAAG,eAAe,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,IAC7G,oBAAoB,MAAM;AACxBA,eAAA,YAAY,mBAAmB,cAAc;AAC7CA,eAAA,YAAY,mBAAmB,cAAc;AAC7CA,eAAA,YAAY,mBAAmB,cAAc;AAC7CA,eAAA,YAAY,mBAAmB,aAAa;AAC5CA,eAAA,YAAY,mBAAmB,aAAa;AAAA,IAC9C;AAAA,IACA,iBAAiB,CAAC,aAAqBA,SAAY,YAAA,OAAO,qBAAqB,QAAQ;AAAA,EAAA;AAE3F;"}